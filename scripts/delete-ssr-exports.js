const fs = require("fs");

const pages = JSON.parse(fs.readFileSync(`.next/server/pages-manifest.json`));
const prerenderManifest = JSON.parse(
  fs.readFileSync(".next/prerender-manifest.json")
);

const prerenderedRoutes = Object.keys(prerenderManifest.routes);

// Everything that's not prerendered (SSG) or a next internal file is categorized as SSR
const ssrRoutes = Object.entries(pages)
  .filter(
    ([route, file]) =>
      ![...prerenderedRoutes, "/", "/_app", "/_document", "/_error"].includes(
        route
      ) && file.endsWith(".js")
  )
  .map(([route]) => route);

// Delete SSR html generated by `next export`
ssrRoutes.forEach(route => {
  if (fs.existsSync(`dist/static${route}.html`)) {
    console.log("Deleting HTML of", route, "because it is SSR");
    fs.unlinkSync(`dist/static${route}.html`);
  } else {
    console.log(route, "should be deleted but doesn't exist");
  }
});
